# 0. 사칙연산
## 더하기 빼기

print( 1 + 2 )
print( 5 - 3 )

## 나누기 곱하기

print(2 * 3)
print(5 / 3)

## 제곱, 나눈값의 나머지 (몫)

#제곱
print(2 ** 3)    
#몫
print(10 // 3)
#나머지
print(10 % 3)

# 1.변수
## 숫자 넣기

a = 5
b = 3
a + b

# 문자 넣기


a = "비비빅"
a

# 2. 문자 연산(?)하기

a= "비비빅"
b = "학습동아리"
a+' '+b

print(a * 10)

![image.png](attachment:image.png)

# 따옴표로 둘러싸면 문자다.
c = '123'
c

## 문자열은 "내용", '내용' 둘다 가능

a = "비비빅"
a

b = '학습동아리'

## "를 문자로 넣으려면?

c = '"안녕?" 하고 어린 왕자가 말했다.'
c

# 3.문자열 세기 추출하기 등


a = """밤하늘에 빛나는 별처럼, 너의 꿈들이 하나 둘 커졌으면 해.
조용히, 그리고 차분하게, 세상의 소음 속에서도 너의 길을 밝히길.

바람이 불 때마다, 새로운 가능성의 문이 열리길.
그리고 너는 걸어가, 두러움 없이, 자유롭게, 너 자신만의 리듬으로.

강물이 바다로 흘러가듯, 너의 여정도 순조롭게 흘러가길.
그리고 바다가 되어, 넓고 깊은 꿈을 품고,
세상과 마주할 준비를 하길

너의 꿈들이 이루어지는 그날까지, 항상 희망의 빛을 읽지 말고,
너의 길을 걸어가길 바래.
너는 이미 별빛이니까, 밤하늘의 어둠 속에서도 빛나는 존재.
                                 ChatGPT, 2024.3.11."""

- 이스케이프 코드
![image.png](attachment:image.png)

# 4. 주피터노트북의 print(a)와 그냥 a의 비교

print(a)

a

## 문자 갯수세기
#### (중요!!!!) 파이썬은 숫자를 0부터 셉니다.  ★★★★★
#### 우리는 이제부터 하나, 둘, 셋, 넷 이 아닌 영, 하나, 둘, 셋, 넷 이 자연스러워져야 합니다.

# 첫번쨰 글자
a[0]

# 두번쨰 글자
a[1]

# 음수는?
a[-1]

# 소수도 가능한가?
a[1.1]

# 5. 슬라이스 비법
## 0:10 일 경우, 출력은 0123456789 까지. 10은 제외
## 0 <= 출력범위 < 10

a[0:10]

a[9:30] + '...'

a[0:10]

# 처음부터 끝까지, 끝부터 처음까지

print(a[250:])

print(a[:39])

# 심사결정번호 자르기
## 심결번호는 YYYYMMDD012345

a = '2024031201234'
year = a[0:4]
year

month = a[4:6]
month

day = a[6:8]
day

# 하나로 합치기 
l = '-'
date = year + l + month + l + day
date

# 한줄로 쓸수도 있다.
date = a[0:4] + '-' + a[4:6]+'-' +a[6:8]
date

#첫번쨰 방법
serial = a[-5:]
serial

# 두번쨰 방법
serial = a[8:]
serial

## 다양한 문자열 함수
###사용방법
 - 형식: "텍스트".함수명(인자)
 - 글자수 세기 .count(#)
 - 찾기 .find('d')
 - 공백 지우기 .strip(), .lstrip(), .rstrip()
 - 바꾸기 .replace("A","B")  -A를 B로 바꾸기
 - 나누기 .split() 혹은 .split(':') ':'기준 나누기
   - 리스트로 만들어준다

# 리스트 자료형?

a = list()   #빈 리스트 만들기
a = [1,2,3,4,5,6]
a

-반복도 가능

print(a * 3)

- 슬라이스가 가능하다

a[3]

# 리스트 안의 리스트
a = [[1,2,3],[4,5,6],[7,8,9]]

a[0][2]

## 리스트 관련 함수
 - .append(#)
 - .sort()
 - .reverse()
 - .index(#) #의 위치를 알려줌
 - .insert(#1,#2) #1위치에, #2를 삽입
 - .remove(#) 리스트에서 첫번째 #삭제
 - .count(#) # 갯수 세기
 

# 그밖의 함수 종류
 - 튜플 : 수정 불가능한 리스트 ()로 감싸서 만들어준다.
 - 딕셔너리: dic = {key1:value1, key2:value2, key3:value3, .....}
 - 집합: set("hello")
 - T/F: True, False
   - 1 == 1 , 1==2
   - 1 > 5, 5 > 1
   - 1 >= a ...



# 함수 만들기?
## def 이름(변수1, 변수2, .....)

# 두 값을 더하는 함수
def add(a,b):
    return a + b

add(5,6)

# 라이브러리 불러오기

## 넘파이 불러오기

import numpy as np
# 넘파이는 np로 불러온다. 전통을 따르세요. convention

## 판다스 불러오기

import pandas as pd
# 판다스는 pd로 불러옵니다. 전통입니다. convention

### 데이터 프레임 만들기

coworker_list = pd.DataFrame([
['180562','정준엽','요양심사부'],
['150513','황병민','요양심사부']
], columns = ['사번','이름','부서'])
coworker_list

## csv 불러오기

df = pd.read_csv('dddd.csv')

## csv 저장하기

coworker_list.to_csv('result.csv')

## 출처
 - 위키독스(점프 투 파이썬) wikidocs.net/book/1
